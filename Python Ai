import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import webbrowser
import os
import smtplib
import pywhatkit
import pyjokes
import requests

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')

engine.setProperty('voice', voices[1].id)

NEWS_API_KEY = 'XXXXXXXX' #One may imply the news api key here
WEATHER_API_KEY = 'XXXXXXXX' #One may imply the weather api key here                  

is_muted = False

def mute():
    global is_muted
    is_muted = True
    print("Muted")

def unmute():
    global is_muted
    is_muted = False
    print("Unmuted")

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if 0 <= hour < 12:
        speak("Good Morning Sir!")
    

    elif 12 <= hour < 18:
        speak("Good Afternoon Sir!")

    else:
        speak("Good Evening Sir!") 

    speak("Hello Sir, I am Name, your Desktop AI Assistant, from Our Company Name, how may I help you?")

def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 2
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)
        print("Say that again please...")
        return "None"
    return query

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('Your Email', 'Your Password')
    server.sendmail('Your Email', to, content)
    server.close()

def get_news_headlines():
    url = f"https://newsapi.org/v2/top-headlines?country=in&apiKey={NEWS_API_KEY}"
    response = requests.get(url)
    data = response.json()

    headlines = []
    for idx, article in enumerate(data['articles'], start=1):
        if idx > 10:
            break  
        headlines.append(article['title'])
    
    return headlines

def get_weather(city):
    url = f"http://api.weatherapi.com/v1/current.json?key={WEATHER_API_KEY}&q={city}"
    response = requests.get(url)
    data = response.json()
    
    if 'error' in data:
        return "Sorry, I couldn't fetch the weather information."
    
    temperature = data['current']['temp_c']
    condition = data['current']['condition']['text']
    return f"The weather in {city} is {condition} with a temperature of {temperature}Â°C."


if __name__ == "__main__":
    wishMe()
    print_mute_message = True
    while True:
        if not is_muted:
            query = takeCommand().lower()

            if 'wikipedia' in query:
                speak('Searching Wikipedia...')
                query = query.replace("wikipedia", "")
                results = wikipedia.summary(query, sentences=10)
                speak("According to Wikipedia")
                print(results)
                speak(results)

            if 'play' in query:
                song = query.replace('play', '')
                speak('playing ' + song)
                pywhatkit.playonyt(song)

            elif 'open youtube' in query:
                webbrowser.open("youtube.com")

            elif 'open stackoverflow' in query:
                webbrowser.open("stackoverflow.com")  

            elif 'open python' in query:
                webbrowser.open("pypi.org")   
            elif 'open github' in query:
                webbrowser.open("github.com")   

            elif 'open mail' in query:
                webbrowser.open("mail.google.com")  

            elif 'open chat g p t' in query:
                webbrowser.open("chat.openai.com")

            elif 'hit some music' in query:
                music_dir = 'C:\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX'
                songs = os.listdir(music_dir)
                print(songs)    
                os.startfile(os.path.join(music_dir, songs[0]))

            elif 'tell me the time' in query:
                strTime = datetime.datetime.now().strftime("%H:%M:%S")    
                speak(f"Sir, the time is {strTime}")

            elif "tell me today's date" in query:
                current_date = datetime.datetime.now().strftime("%d %m %Y")
                speak("Today's date is " + current_date)

            elif 'open code' in query:
                codePath = "C:\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\Visual Studio Code.lnk"
                os.startfile(codePath)

            elif 'open google' in query:
                go = "C:\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\XXXXX\\Google Chrome.lnk"
                os.startfile(go)


            elif 'tell me some news' in query:
                speak("Sure, let me fetch the latest top 10 news for you.")
                news_headlines = get_news_headlines()
                for idx, headline in enumerate(news_headlines, start=1):
                    speak(f"News {idx}: {headline}")
                    if idx == 10:
                        break

            elif 'what is the weather in' in query:
                city = query.replace('what is the weather in', '').strip()
                weather_info = get_weather(city)
                speak(weather_info)

            elif 'tell me a joke' in query:
                speak(pyjokes.get_joke())

            elif 'are you single' in query:
                speak('I am in relationship to the WiFi')

            elif 'namaste' in query:
                speak('Namaste! ; Please go ahead and give me a command')

            elif 'kaisi ho' in query:
                speak('My system 32 is doing good. I hope you are alright.')

            elif 'Do you know me' in query:
                speak('Yes I do. You are my creator Username CyberSpace.')

            elif 'mute' in query:
                mute()
            elif 'unmute' in query:
                unmute()

        else:
            if not print_mute_message:
                print("Muted")
                print_mute_message = False
